@inproceedings{interfaceTheories,
 author = {Alfaro, Luca de and Henzinger, Thomas A.},
 title = {Interface Theories for Component-Based Design},
 booktitle = {EMSOFT '01: Proceedings of the First International Workshop on Embedded Software},
 year = {2001},
 isbn = {3-540-42673-6},
 pages = {148--165},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

@misc{yices,
    author = {Dutertre, B. and de Moura, L.},
    citeulike-article-id = {2639925},
    howpublished = {Tool paper at http://yices.csl.sri.com/tool-paper.pdf},
    keywords = {sat-solvers},
    month = {August},
    organization = {SRI International},
    posted-at = {2008-04-08 04:25:43},
    priority = {2},
    title = {The Yices SMT solver},
    year = {2006}
}

@inproceedings{semanticAnnotation,
    author = {Jackie Man-Kit Leung and Thomas Mandl and
              Elizabeth Latronico and Charles Shelton and Edward
              A. Lee and Stavros Tripakis and Ben Lickly},
    title = {Scalable Semantic Annotation using Lattice-based
              Ontologies},
    booktitle = {12th International Conference on Model Driven
              Engineering Languages and Systems},
    organization = {ACM/IEEE},
    day = {4-9},
    month = {October},
    year = {2009},
}

@inproceedings{relationalInterfaces,
 author = {Tripakis, Stavros and Lickly, Ben and Henzinger, Thomas A. and Lee, Edward A.},
 title = {On relational interfaces},
 booktitle = {EMSOFT '09: Proceedings of the seventh ACM international conference on Embedded software},
 year = {2009},
 isbn = {978-1-60558-627-4},
 pages = {67--76},
 location = {Grenoble, France},
 doi = {http://doi.acm.org/10.1145/1629335.1629346},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@ARTICLE{ptII,
title={Taming heterogeneity - the Ptolemy approach},
author={Eker, J. and Janneck, J.W. and Lee, E.A. and Jie Liu and Xiaojun Liu and Ludvig, J. and Neuendorffer, S. and Sachs, S. and Yuhong Xiong},
journal={Proceedings of the IEEE},
year={2003},
month={Jan},
volume={91},
number={1},
pages={ 127-144},
abstract={ Modern embedded computing systems tend to be heterogeneous in the sense of being composed of subsystems with very different characteristics, which communicate and interact in a variety of ways-synchronous or asynchronous, buffered or unbuffered, etc. Obviously, when designing such systems, a modeling language needs to reflect this heterogeneity. Today's modeling environments usually offer a variant of what we call amorphous heterogeneity to address this problem. This paper argues that modeling systems in this manner leads to unexpected and hard-to-analyze interactions between the communication mechanisms and proposes a more structured approach to heterogeneity, called hierarchical heterogeneity, to solve this problem. It proposes a model structure and semantic framework that support this form of heterogeneity, and discusses the issues arising from heterogeneous component interaction and the desire for component reuse. It introduces the notion of domain polymorphism as a way to address these issues.},
keywords={ embedded systems, object-oriented programming, programming environments, software architecture, software reusability Ptolemy, Ptolemy II, component reuse, component-based design, domain polymorphism, embedded computing systems, heterogeneous modeling, hierarchical heterogeneity, modeling environments, models of computation, software environment},
doi={10.1109/JPROC.2002.805829},
ISSN={0018-9219}, }

